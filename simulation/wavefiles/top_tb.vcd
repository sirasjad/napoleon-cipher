$date
  Mon Mar 16 20:13:40 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module top_tb $end
$var reg 8 ! data_in[7:0] $end
$var reg 8 " key_in[7:0] $end
$var reg 8 # data_out[7:0] $end
$var reg 1 $ clk $end
$var reg 1 % clr $end
$scope module toplevel $end
$var reg 8 & datain[7:0] $end
$var reg 8 ' keyin[7:0] $end
$var reg 8 ( dataout[7:0] $end
$var reg 1 ) clk $end
$var reg 1 * clr $end
$var reg 8 + rom_to_cipher[7:0] $end
$var reg 8 , keyrom_to_cipher[7:0] $end
$var reg 8 - cipher_to_rom[7:0] $end
$scope module data_encoder $end
$var reg 8 . din[7:0] $end
$var reg 8 / dout[7:0] $end
$upscope $end
$scope module key_encoder $end
$var reg 8 0 din[7:0] $end
$var reg 8 1 dout[7:0] $end
$upscope $end
$scope module cipher $end
$var reg 8 2 datain[7:0] $end
$var reg 8 3 keyin[7:0] $end
$var reg 8 4 dataout[7:0] $end
$var integer 32 5 ciphertext $end
$upscope $end
$scope module decoder $end
$var reg 8 6 din[7:0] $end
$var reg 8 7 dout[7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b01101101 !
b01101010 "
b01110111 #
0$
0%
b01101101 &
b01101010 '
b01110111 (
0)
0*
b00001101 +
b00001010 ,
b00010111 -
b01101101 .
b00001101 /
b01101010 0
b00001010 1
b00001101 2
b00001010 3
b00010111 4
b10111 5
b00010111 6
b01110111 7
#5000000
1$
1)
#10000000
b01100001 !
b01100101 "
b01100100 #
0$
b01100001 &
b01100101 '
b01100100 (
0)
b00000001 +
b00000101 ,
b00000100 -
b01100001 .
b00000001 /
b01100101 0
b00000101 1
b00000001 2
b00000101 3
b00000100 4
b100 5
b00000100 6
b01100100 7
#15000000
1$
1)
#20000000
b01101011 !
b01100001 "
b01110000 #
0$
b01101011 &
b01100001 '
b01110000 (
0)
b00001011 +
b00000001 ,
b00010000 -
b01101011 .
b00001011 /
b01100001 0
b00000001 1
b00001011 2
b00000001 3
b00010000 4
b10000 5
b00010000 6
b01110000 7
#25000000
1$
1)
#30000000
b01100101 !
b01101110 "
b01101001 #
0$
b01100101 &
b01101110 '
b01101001 (
0)
b00000101 +
b00001110 ,
b00001001 -
b01100101 .
b00000101 /
b01101110 0
b00001110 1
b00000101 2
b00001110 3
b00001001 4
b1001 5
b00001001 6
b01101001 7
#35000000
1$
1)
#40000000
b01101010 "
b01100101 #
0$
b01101010 '
b01100101 (
0)
b00001010 ,
b00000101 -
b01101010 0
b00001010 1
b00001010 3
b00000101 4
b101 5
b00000101 6
b01100101 7
#45000000
1$
1)
#50000000
b01110110 !
b01100001 "
0$
b01110110 &
b01100001 '
0)
b00010110 +
b00000001 ,
b01110110 .
b00010110 /
b01100001 0
b00000001 1
b00010110 2
b00000001 3
#55000000
1$
1)
#60000000
b01100101 !
b01100011 "
b01111000 #
0$
b01100101 &
b01100011 '
b01111000 (
0)
b00000101 +
b00000011 ,
b00011000 -
b01100101 .
b00000101 /
b01100011 0
b00000011 1
b00000101 2
b00000011 3
b00011000 4
b11000 5
b00011000 6
b01111000 7
#65000000
1$
1)
#70000000
b01110010 !
b01110001 "
b01111001 #
0$
b01110010 &
b01110001 '
b01111001 (
0)
b00010010 +
b00010001 ,
b00011001 -
b01110010 .
b00010010 /
b01110001 0
b00010001 1
b00010010 2
b00010001 3
b00011001 4
b11001 5
b00011001 6
b01111001 7
#75000000
1$
1)
#80000000
b01111001 !
b01110101 "
b01110110 #
0$
b01111001 &
b01110101 '
b01110110 (
0)
b00011001 +
b00010101 ,
b00010110 -
b01111001 .
b00011001 /
b01110101 0
b00010101 1
b00011001 2
b00010101 3
b00010110 4
b10110 5
b00010110 6
b01110110 7
#85000000
1$
1)
#90000000
0$
0)
#95000000
1$
1)
#100000000
0$
0)
#105000000
1$
1)
#110000000
0$
0)
#115000000
1$
1)
#120000000
0$
0)
#125000000
1$
1)
#130000000
0$
0)
#135000000
1$
1)
#140000000
0$
0)
#145000000
1$
1)
#150000000
0$
0)
#155000000
1$
1)
#160000000
0$
0)
#165000000
1$
1)
#170000000
0$
0)
#175000000
1$
1)
#180000000
0$
0)
#185000000
1$
1)
#190000000
0$
0)
#195000000
1$
1)
#200000000
0$
0)
#205000000
1$
1)
#210000000
0$
0)
#215000000
1$
1)
#220000000
0$
0)
#225000000
1$
1)
#230000000
0$
0)
#235000000
1$
1)
#240000000
0$
0)
#245000000
1$
1)
#250000000
0$
0)
#255000000
1$
1)
#260000000
0$
0)
#265000000
1$
1)
#270000000
0$
0)
#275000000
1$
1)
#280000000
0$
0)
#285000000
1$
1)
#290000000
0$
0)
#295000000
1$
1)
#300000000
0$
0)
